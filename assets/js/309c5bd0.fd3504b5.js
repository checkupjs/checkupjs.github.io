"use strict";(self.webpackChunkcheckup_website=self.webpackChunkcheckup_website||[]).push([[9573],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(t),f=o,h=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return t?r.createElement(h,i(i({ref:n},s),{},{components:t})):r.createElement(h,i({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5120:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return s},default:function(){return m}});var r=t(3117),o=t(102),a=(t(7294),t(3905)),i=["components"],c={id:"config",title:"Configuration"},u=void 0,l={unversionedId:"introduction/config",id:"introduction/config",isDocsHomePage:!1,title:"Configuration",description:"Checkup uses a .checkuprc file to configure the behaviour of the tool. The file is located in the root of the project.",source:"@site/docs/introduction/configuration.mdx",sourceDirName:"introduction",slug:"/introduction/config",permalink:"/docs/introduction/config",editUrl:"https://github.com/checkupjs/checkup/edit/master/website/docs/introduction/configuration.mdx",tags:[],version:"current",frontMatter:{id:"config",title:"Configuration"},sidebar:"guidesSidebar",previous:{title:"Node API",permalink:"/docs/introduction/node-api"},next:{title:"Authoring Plugins",permalink:"/docs/guides/plugins"}},s=[{value:"Configuration file",id:"configuration-file",children:[{value:"<code>excludePaths</code>",id:"excludepaths",children:[],level:3},{value:"<code>plugins</code>",id:"plugins",children:[],level:3},{value:"<code>tasks</code>",id:"tasks",children:[],level:3}],level:2}],p=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)}},d=p("Tabs"),f=p("TabItem"),h={toc:s};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Checkup uses a ",(0,a.kt)("inlineCode",{parentName:"p"},".checkuprc")," file to configure the behaviour of the tool. The file is located in the root of the project."),(0,a.kt)("h2",{id:"configuration-file"},"Configuration file"),(0,a.kt)("p",null,"You can create a configuration file by running the following command:"),(0,a.kt)(d,{groupId:"package-manager-flavor",defaultValue:"npx",values:[{label:"npx",value:"npx"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,a.kt)(f,{value:"npx",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx checkup generate config\n"))),(0,a.kt)(f,{value:"yarn",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn checkup generate config\n")))),(0,a.kt)("p",null,"This will generate a .checkuprc file in the current directory, with the following contents:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".checkuprc"',title:'".checkuprc"'},'{\n  "$schema": "https://raw.githubusercontent.com/checkupjs/checkup/master/packages/core/src/schemas/config-schema.json",\n  "excludePaths": [],\n  "plugins": [],\n  "tasks": {}\n}\n')),(0,a.kt)("h3",{id:"excludepaths"},(0,a.kt)("inlineCode",{parentName:"h3"},"excludePaths")),(0,a.kt)("p",null,"You can exclude paths from the analysis by adding them to the ",(0,a.kt)("inlineCode",{parentName:"p"},"excludePaths")," array, which is a comma separated list of paths."),(0,a.kt)("h3",{id:"plugins"},(0,a.kt)("inlineCode",{parentName:"h3"},"plugins")),(0,a.kt)("p",null,"Plugins can be configured by adding them to the ",(0,a.kt)("inlineCode",{parentName:"p"},"plugins")," array. Each plugin is a string that represents the name of the plugin."),(0,a.kt)("h3",{id:"tasks"},(0,a.kt)("inlineCode",{parentName:"h3"},"tasks")),(0,a.kt)("p",null,"Tasks can be individually configured by adding them to the ",(0,a.kt)("inlineCode",{parentName:"p"},"tasks")," object. The key is the name of the task, and the value is either a string or a tuple:"),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "https://raw.githubusercontent.com/checkupjs/checkup/master/packages/core/src/schemas/config-schema.json",\n  "excludePaths": [],\n  "plugins": [],\n  "tasks": {\n    "plugin-name/my-task": "off",\n    "plugin-name/my-other-task": [\n      "on",\n      {\n        "some-option": "some-value"\n      }\n    ]\n  }\n}\n')))}m.isMDXComponent=!0}}]);