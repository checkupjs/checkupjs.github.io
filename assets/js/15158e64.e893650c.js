"use strict";(self.webpackChunkcheckup_website=self.webpackChunkcheckup_website||[]).push([[9079],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function l(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){l(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,n,l=function(t,e){if(null==t)return{};var r,n,l={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(l[r]=t[r]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(l[r]=t[r])}return l}var u=n.createContext({}),c=function(t){var e=n.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},p=function(t){var e=c(t.components);return n.createElement(u.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,l=t.mdxType,i=t.originalType,u=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),d=c(r),m=l,f=d["".concat(u,".").concat(m)]||d[m]||s[m]||i;return r?n.createElement(f,a(a({ref:e},p),{},{components:r})):n.createElement(f,a({ref:e},p))}));function m(t,e){var r=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=r.length,a=new Array(i);a[0]=d;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o.mdxType="string"==typeof t?t:l,a[1]=o;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6797:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var n=r(3117),l=r(102),i=(r(7294),r(3905)),a=["components"],o={id:"writeResultsToFile",title:"writeResultsToFile"},u=void 0,c={unversionedId:"api/@checkup/cli/writeResultsToFile",id:"api/@checkup/cli/writeResultsToFile",isDocsHomePage:!1,title:"writeResultsToFile",description:"writeResultsToFile(result, cwd, [outputFile]) \u21d2 \\*",source:"@site/docs/api/@checkup/cli/writeResultsToFile.md",sourceDirName:"api/@checkup/cli",slug:"/api/@checkup/cli/writeResultsToFile",permalink:"/docs/api/@checkup/cli/writeResultsToFile",editUrl:"https://github.com/checkupjs/checkup/edit/master/website/docs/api/@checkup/cli/writeResultsToFile.md",tags:[],version:"current",frontMatter:{id:"writeResultsToFile",title:"writeResultsToFile"}},p=[{value:"writeResultsToFile(result, cwd, outputFile) \u21d2 <code>*</code>",id:"writeresultstofileresult-cwd-outputfile--",children:[],level:2}],s={toc:p};function d(t){var e=t.components,r=(0,l.Z)(t,a);return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("a",{name:"writeResultsToFile"}),(0,i.kt)("h2",{id:"writeresultstofileresult-cwd-outputfile--"},"writeResultsToFile(result, cwd, ","[outputFile]",") \u21d2 ",(0,i.kt)("code",null,"*")),(0,i.kt)("p",null,"A utility function to write results to an output file. If no ",(0,i.kt)("inlineCode",{parentName:"p"},"outputFile"),' is given,\nit uses a default output file name in the format "checkup-report-YYYY-MM-DD-HH_mm_ss".\nIf result is a string the extension is .txt, otherwise .sarif is used.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": global function",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Returns"),": ",(0,i.kt)("code",null,"*")," - {string}  "),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Param"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"result"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"Log")," ","|"," ",(0,i.kt)("code",null,"string")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"The result to be output, either a SARIF log or a string.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"cwd"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"string")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"The current working directory to write to.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[outputFile]"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,"string")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("code",null,'"',"DEFAULT_OUTPUT_FILENAME",'"')),(0,i.kt)("td",{parentName:"tr",align:null},"The output filename format.")))))}d.isMDXComponent=!0}}]);