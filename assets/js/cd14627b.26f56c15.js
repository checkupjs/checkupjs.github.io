"use strict";(self.webpackChunkcheckup_website=self.webpackChunkcheckup_website||[]).push([[3806],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||o;return n?a.createElement(m,s(s({ref:t},c),{},{components:n})):a.createElement(m,s({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(3117),r=n(7294),o=n(2389),s=n(9443);var i=function(){var e=(0,r.useContext)(s.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=n(9521),u=n(6010),c="tabItem_1uMI";function p(e){var t,n,a,o=e.lazy,s=e.block,p=e.defaultValue,d=e.values,f=e.groupId,m=e.className,v=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=d?d:v.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),h=(0,l.lx)(g,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===p?p:null!=(t=null!=p?p:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=v[0])?void 0:a.props.value;if(null!==b&&!g.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=i(),y=k.tabGroupChoices,T=k.setTabGroupChoices,w=(0,r.useState)(b),E=w[0],j=w[1],x=[],O=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var N=y[f];null!=N&&N!==E&&g.some((function(e){return e.value===N}))&&j(N)}var C=function(e){var t=e.currentTarget,n=x.indexOf(t),a=g[n].value;a!==E&&(O(t),j(a),null!=f&&T(f,a))},A=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=x.indexOf(e.currentTarget)+1;n=x[a]||x[0];break;case"ArrowLeft":var r=x.indexOf(e.currentTarget)-1;n=x[r]||x[x.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":s},m)},g.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,className:(0,u.Z)("tabs__item",c,{"tabs__item--active":E===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:A,onFocus:C,onClick:C},null!=n?n:t)}))),o?(0,r.cloneElement)(v.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function d(e){var t=(0,o.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},9443:function(e,t,n){var a=(0,n(7294).createContext)(void 0);t.Z=a},8641:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=n(3117),r=n(102),o=(n(7294),n(3905)),s=n(6396),i=n(8215),l=["components"],u={id:"actions",title:"Triggering Actions"},c=void 0,p={unversionedId:"guides/actions",id:"guides/actions",isDocsHomePage:!1,title:"Triggering Actions",description:"Tasks gather data from analyzed files, and sometimes you want to help add emphasis to specific parts of the data. This is accomplished through the use of actions.",source:"@site/docs/guides/actions.mdx",sourceDirName:"guides",slug:"/guides/actions",permalink:"/docs/guides/actions",editUrl:"https://github.com/checkupjs/checkup/edit/master/website/docs/guides/actions.mdx",tags:[],version:"current",frontMatter:{id:"actions",title:"Triggering Actions"},sidebar:"guidesSidebar",previous:{title:"Writing a Validation Task",permalink:"/docs/guides/writing-validation-tasks"},next:{title:"Using Analyzers",permalink:"/docs/guides/analyzers"}},d=[{value:"Writing an Action",id:"writing-an-action",children:[],level:2}],f={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Tasks gather data from analyzed files, and sometimes you want to help add emphasis to specific parts of the data. This is accomplished through the use of actions."),(0,o.kt)("p",null,"Actions are declarative triggers that can be attached to any task. They are ran as a post-processing step on the results of the task, and any triggered actions are\nstored as part of the output."),(0,o.kt)("p",null,"To add actions to a plugin for a task, use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn checkup generate actions <actions name>\n")),(0,o.kt)("p",null,"You'll be prompted to identify the task you want to add the actions to."),(0,o.kt)("p",null,"This will generate the following file:"),(0,o.kt)(s.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript project",value:"ts"},{label:"JavaScript project",value:"js"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"- src/actions/actions-name.ts\n"))),(0,o.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"- src/actions/actions-name.js\n")))),(0,o.kt)("h2",{id:"writing-an-action"},"Writing an Action"),(0,o.kt)("p",null,"Actions are written in a declarative fashion, by evaluating specific values from the task results. The following is an example of a simple action that is triggered\nwhen the occurances of the task results are greater than a certain threshold:"),(0,o.kt)(s.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/actions/actions-name.ts"',title:'"/actions/actions-name.ts"'},"import { ActionsEvaluator, TaskConfig } from '@checkup/core';\nimport { Result } from 'sarif';\n\nexport function evaluateActions(taskResults: Result[], taskConfig: TaskConfig) {\n  let actionsEvaluator = new ActionsEvaluator();\n  let occurances = taskResult.length;\n\n  actionsEvaluator.add({\n    taskName: 'task-name-to-run-actions-on',\n    name: 'task-name-bad-things',\n    summary: 'Reduce number of bad things',\n    details: `${occurances} usages of bad things`,\n    defaultThreshold: 2,\n    items: [`Total occurances: ${occurances}`],\n    input: occurances,\n  });\n\n  return actionsEvaluator.evaluate(taskConfig);\n}\n"))),(0,o.kt)(i.Z,{value:"js",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/actions/actions-name.js"',title:'"/actions/actions-name.js"'},"const { ActionsEvaluator } = require('@checkup/core');\n\nmodule.exports = function evaluateActions(taskResults, taskConfig) {\n  let actionsEvaluator = new ActionsEvaluator();\n  let occurances = taskResult.length;\n\n  actionsEvaluator.add({\n    taskName: 'task-name-to-run-actions-on',\n    name: 'task-name-bad-things',\n    summary: 'Reduce number of bad things',\n    details: `${occurances} usages of bad things`,\n    defaultThreshold: 2,\n    items: [`Total occurances: ${occurances}`],\n    input: occurances,\n  });\n\n  return actionsEvaluator.evaluate(taskConfig);\n};\n")))))}m.isMDXComponent=!0}}]);