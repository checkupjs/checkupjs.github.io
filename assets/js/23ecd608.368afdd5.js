"use strict";(self.webpackChunkcheckup_website=self.webpackChunkcheckup_website||[]).push([[9011],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return g}});var n=t(7294);function c(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){c(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,c=function(e,r){if(null==e)return{};var t,n,c={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(c[t]=e[t]);return c}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var u=n.createContext({}),i=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=i(e.components);return n.createElement(u.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},k=n.forwardRef((function(e,r){var t=e.components,c=e.mdxType,o=e.originalType,u=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),k=i(t),g=c,h=k["".concat(u,".").concat(g)]||k[g]||s[g]||o;return t?n.createElement(h,a(a({ref:r},l),{},{components:t})):n.createElement(h,a({ref:r},l))}));function g(e,r){var t=arguments,c=r&&r.mdxType;if("string"==typeof e||c){var o=t.length,a=new Array(o);a[0]=k;var p={};for(var u in r)hasOwnProperty.call(r,u)&&(p[u]=r[u]);p.originalType=e,p.mdxType="string"==typeof e?e:c,a[1]=p;for(var i=2;i<o;i++)a[i]=t[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}k.displayName="MDXCreateElement"},5116:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return i},toc:function(){return l},default:function(){return k}});var n=t(3117),c=t(102),o=(t(7294),t(3905)),a=["components"],p={id:"CheckupLogParser",title:"CheckupLogParser"},u=void 0,i={unversionedId:"api/@checkup/core/CheckupLogParser",id:"api/@checkup/core/CheckupLogParser",isDocsHomePage:!1,title:"CheckupLogParser",description:"CheckupLogParser",source:"@site/docs/api/@checkup/core/CheckupLogParser.md",sourceDirName:"api/@checkup/core",slug:"/api/@checkup/core/CheckupLogParser",permalink:"/docs/api/@checkup/core/CheckupLogParser",editUrl:"https://github.com/checkupjs/checkup/edit/master/website/docs/api/@checkup/core/CheckupLogParser.md",tags:[],version:"current",frontMatter:{id:"CheckupLogParser",title:"CheckupLogParser"},sidebar:"apiSidebar",previous:{title:"CheckupLogBuilder",permalink:"/docs/api/@checkup/core/CheckupLogBuilder"},next:{title:"DependencyAnalyzer",permalink:"/docs/api/@checkup/core/DependencyAnalyzer"}},l=[{value:"CheckupLogParser",id:"checkuplogparser",children:[{value:"new CheckupLogParser()",id:"new-checkuplogparser",children:[],level:3}],level:2}],s={toc:l};function k(e){var r=e.components,t=(0,c.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("a",{name:"CheckupLogParser"}),(0,o.kt)("h2",{id:"checkuplogparser"},"CheckupLogParser"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Kind"),": global class  "),(0,o.kt)("a",{name:"new_CheckupLogParser_new"}),(0,o.kt)("h3",{id:"new-checkuplogparser"},"new CheckupLogParser()"),(0,o.kt)("p",null,"A class that parses a SARIF checkup log to provide a\nsimpler interface to accessing common properties."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"let logParser = new CheckupLogParser(log);\n\nfor (let rule of logParser.rules) {\n  console.log(rule);\n}\n")))}k.isMDXComponent=!0}}]);