"use strict";(self.webpackChunkcheckup_website=self.webpackChunkcheckup_website||[]).push([[1052],{3905:function(e,t,a){a.d(t,{Zo:function(){return k},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},k=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,k=i(e,["components","mdxType","originalType","parentName"]),d=p(a),c=r,m=d["".concat(o,".").concat(c)]||d[c]||u[c]||l;return a?n.createElement(m,s(s({ref:t},k),{},{components:a})):n.createElement(m,s({ref:t},k))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<l;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9863:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return k},default:function(){return d}});var n=a(3117),r=a(102),l=(a(7294),a(3905)),s=["components"],i={id:"BaseTask",title:"BaseTask"},o=void 0,p={unversionedId:"api/@checkup/core/BaseTask",id:"api/@checkup/core/BaseTask",isDocsHomePage:!1,title:"BaseTask",description:"BaseTask",source:"@site/docs/api/@checkup/core/BaseTask.md",sourceDirName:"api/@checkup/core",slug:"/api/@checkup/core/BaseTask",permalink:"/docs/api/@checkup/core/BaseTask",editUrl:"https://github.com/checkupjs/checkup/edit/master/website/docs/api/@checkup/core/BaseTask.md",tags:[],version:"current",frontMatter:{id:"BaseTask",title:"BaseTask"},sidebar:"apiSidebar",previous:{title:"BaseMigrationTask",permalink:"/docs/api/@checkup/core/BaseMigrationTask"},next:{title:"BaseValidationTask",permalink:"/docs/api/@checkup/core/BaseValidationTask"}},k=[{value:"BaseTask",id:"basetask",children:[{value:"new BaseTask(pluginName, context)",id:"new-basetaskpluginname-context",children:[],level:3},{value:"baseTask.log",id:"basetasklog",children:[],level:3},{value:"baseTask.config",id:"basetaskconfig",children:[],level:3},{value:"baseTask.enabled",id:"basetaskenabled",children:[],level:3},{value:"baseTask.fullyQualifiedTaskName",id:"basetaskfullyqualifiedtaskname",children:[],level:3},{value:"baseTask.addResult(messageText, kind, level, options)",id:"basetaskaddresultmessagetext-kind-level-options",children:[],level:3},{value:"baseTask.flattenLintResults(results) \u21d2",id:"basetaskflattenlintresultsresults-",children:[],level:3},{value:"baseTask.addRule(additionalRuleProps) \u21d2",id:"basetaskaddruleadditionalruleprops-",children:[],level:3},{value:"baseTask.addRuleProperties(properties)",id:"basetaskaddrulepropertiesproperties",children:[],level:3}],level:2}],u={toc:k};function d(e){var t=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("a",{name:"BaseTask"}),(0,l.kt)("h2",{id:"basetask"},"BaseTask"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global class"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask"},"BaseTask"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#new_BaseTask_new"},"new BaseTask(pluginName, context)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask+log"},".log")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask+config"},".config")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask+enabled"},".enabled")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask+fullyQualifiedTaskName"},".fullyQualifiedTaskName")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask+addResult"},".addResult(messageText, kind, level, options)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask+flattenLintResults"},".flattenLintResults(results)")," \u21d2"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask+addRule"},".addRule(additionalRuleProps)")," \u21d2"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseTask+addRuleProperties"},".addRuleProperties(properties)"))))),(0,l.kt)("a",{name:"new_BaseTask_new"}),(0,l.kt)("h3",{id:"new-basetaskpluginname-context"},"new BaseTask(pluginName, context)"),(0,l.kt)("p",null,"Creates a new instance of a BaseTask."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pluginName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the plugin this task is included in.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"context"),(0,l.kt)("td",{parentName:"tr",align:null},"The runtime task context passed to the Task.")))),(0,l.kt)("a",{name:"BaseTask+log"}),(0,l.kt)("h3",{id:"basetasklog"},"baseTask.log"),(0,l.kt)("p",null,"Gets a reference to the SARIF log."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,l.kt)("a",{parentName:"p",href:"#BaseTask"},(0,l.kt)("code",null,"BaseTask")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Read only"),": true  "),(0,l.kt)("a",{name:"BaseTask+config"}),(0,l.kt)("h3",{id:"basetaskconfig"},"baseTask.config"),(0,l.kt)("p",null,"Gets an object containing optional configuration for this Task. Tasks can be\nconfigured in the .checkuprc file."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,l.kt)("a",{parentName:"p",href:"#BaseTask"},(0,l.kt)("code",null,"BaseTask")),"  "),(0,l.kt)("a",{name:"BaseTask+enabled"}),(0,l.kt)("h3",{id:"basetaskenabled"},"baseTask.enabled"),(0,l.kt)("p",null,"A boolean indicating whether this task is enabled or not. Tasks can be\nenabled by specifically configuring them in the .checkuprc file."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,l.kt)("a",{parentName:"p",href:"#BaseTask"},(0,l.kt)("code",null,"BaseTask")),"  "),(0,l.kt)("a",{name:"BaseTask+fullyQualifiedTaskName"}),(0,l.kt)("h3",{id:"basetaskfullyqualifiedtaskname"},"baseTask.fullyQualifiedTaskName"),(0,l.kt)("p",null,"The fully qualified name for this task, in the format"),(0,l.kt)("p",null,"pluginName/taskName"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,l.kt)("a",{parentName:"p",href:"#BaseTask"},(0,l.kt)("code",null,"BaseTask")),"  "),(0,l.kt)("a",{name:"BaseTask+addResult"}),(0,l.kt)("h3",{id:"basetaskaddresultmessagetext-kind-level-options"},"baseTask.addResult(messageText, kind, level, options)"),(0,l.kt)("p",null,"Adds a result object to the Checkup output. Result objects are ",(0,l.kt)("a",{parentName:"p",href:"https://docs.oasis-open.org/sarif/sarif/v2.1.0/csprd01/sarif-v2.1.0-csprd01.html#_Toc10541076"},"SARIF Result")," format."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.kt)("a",{parentName:"p",href:"#BaseTask"},(0,l.kt)("code",null,"BaseTask"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageText"),(0,l.kt)("td",{parentName:"tr",align:null},"A non-empty string containing a plain text message")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"kind"),(0,l.kt)("td",{parentName:"tr",align:null},"One of a fixed set of strings that specify the nature of the result")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"level"),(0,l.kt)("td",{parentName:"tr",align:null},"One of a fixed set of strings that specify the severity level of the result")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options"),(0,l.kt)("td",{parentName:"tr",align:null},"Additional options to pass to the result")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options.location"),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies a location where the result occurred")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options.properties"),(0,l.kt)("td",{parentName:"tr",align:null},"A property bag named properties, which stores additional values on the result")))),(0,l.kt)("a",{name:"BaseTask+flattenLintResults"}),(0,l.kt)("h3",{id:"basetaskflattenlintresultsresults-"},"baseTask.flattenLintResults(results) \u21d2"),(0,l.kt)("p",null,"Takes an array of nested lint results, ones that contain a top-level object and a messages array representing\neach result found for a file, and flattens them into an array of non-nested objects. This allows for easier\nprocessing into SARIF result objects."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.kt)("a",{parentName:"p",href:"#BaseTask"},(0,l.kt)("code",null,"BaseTask")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Returns"),": An array of normalized lint results"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"results"),(0,l.kt)("td",{parentName:"tr",align:null},"An array of lint results")))),(0,l.kt)("a",{name:"BaseTask+addRule"}),(0,l.kt)("h3",{id:"basetaskaddruleadditionalruleprops-"},"baseTask.addRule(additionalRuleProps) \u21d2"),(0,l.kt)("p",null,"Adds rule metadata to the SARIF log."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.kt)("a",{parentName:"p",href:"#BaseTask"},(0,l.kt)("code",null,"BaseTask")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Returns"),": The task name, which represents the rule ID in the SARIF log."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"additionalRuleProps"),(0,l.kt)("td",{parentName:"tr",align:null},"Additional properties to be passed to the SARIF rule metadata.")))),(0,l.kt)("a",{name:"BaseTask+addRuleProperties"}),(0,l.kt)("h3",{id:"basetaskaddrulepropertiesproperties"},"baseTask.addRuleProperties(properties)"),(0,l.kt)("p",null,"Adds additional properties to the rule metadata's properties in the SARIF log."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.kt)("a",{parentName:"p",href:"#BaseTask"},(0,l.kt)("code",null,"BaseTask"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"properties"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"PropertyBag")),(0,l.kt)("td",{parentName:"tr",align:null},"A to be merged with the rule metadata's properties.")))))}d.isMDXComponent=!0}}]);