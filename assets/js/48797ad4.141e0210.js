"use strict";(self.webpackChunkcheckup_website=self.webpackChunkcheckup_website||[]).push([[1883],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),i=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=i(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=i(t),m=a,y=d["".concat(u,".").concat(m)]||d[m]||p[m]||l;return t?r.createElement(y,s(s({ref:n},c),{},{components:t})):r.createElement(y,s({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,s=new Array(l);s[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var i=2;i<l;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8215:function(e,n,t){var r=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},6396:function(e,n,t){t.d(n,{Z:function(){return d}});var r=t(3117),a=t(7294),l=t(2389),s=t(9443);var o=function(){var e=(0,a.useContext)(s.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=t(9521),i=t(6010),c="tabItem_1uMI";function p(e){var n,t,r,l=e.lazy,s=e.block,p=e.defaultValue,d=e.values,m=e.groupId,y=e.className,f=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=d?d:f.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),b=(0,u.lx)(v,(function(e,n){return e.value===n.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===p?p:null!=(n=null!=p?p:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(r=f[0])?void 0:r.props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=o(),h=g.tabGroupChoices,z=g.setTabGroupChoices,T=(0,a.useState)(k),w=T[0],A=T[1],N=[],O=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var x=h[m];null!=x&&x!==w&&v.some((function(e){return e.value===x}))&&A(x)}var E=function(e){var n=e.currentTarget,t=N.indexOf(n),r=v[t].value;r!==w&&(O(n),A(r),null!=m&&z(m,r))},j=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=N.indexOf(e.currentTarget)+1;t=N[r]||N[0];break;case"ArrowLeft":var a=N.indexOf(e.currentTarget)-1;t=N[a]||N[N.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":s},y)},v.map((function(e){var n=e.value,t=e.label;return a.createElement("li",{role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,className:(0,i.Z)("tabs__item",c,{"tabs__item--active":w===n}),key:n,ref:function(e){return N.push(e)},onKeyDown:j,onFocus:E,onClick:E},null!=t?t:n)}))),l?(0,a.cloneElement)(f.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==w})}))))}function d(e){var n=(0,l.Z)();return a.createElement(p,(0,r.Z)({key:String(n)},e))}},9443:function(e,n,t){var r=(0,t(7294).createContext)(void 0);n.Z=r},2473:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return y}});var r=t(3117),a=t(102),l=(t(7294),t(3905)),s=t(6396),o=t(8215),u=["components"],i={id:"analyzers",title:"Using Analyzers"},c=void 0,p={unversionedId:"guides/analyzers",id:"guides/analyzers",isDocsHomePage:!1,title:"Using Analyzers",description:"Analyzers allow you to perform custom checks on your code. Checkup provides a number of built-in analyzers, but you can also create your own.",source:"@site/docs/guides/analyzers.mdx",sourceDirName:"guides",slug:"/guides/analyzers",permalink:"/docs/guides/analyzers",editUrl:"https://github.com/checkupjs/checkup/edit/master/website/docs/guides/analyzers.mdx",tags:[],version:"current",frontMatter:{id:"analyzers",title:"Using Analyzers"},sidebar:"guidesSidebar",previous:{title:"Triggering Actions",permalink:"/docs/guides/actions"},next:{title:"Generating Results",permalink:"/docs/guides/generating-results"}},d=[{value:"Built-in Analyzers",id:"built-in-analyzers",children:[],level:2},{value:"Using Analyzers",id:"using-analyzers",children:[],level:2}],m={toc:d};function y(e){var n=e.components,t=(0,a.Z)(e,u);return(0,l.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Analyzers allow you to perform custom checks on your code. Checkup provides a number of built-in analyzers, but you can also create your own."),(0,l.kt)("h2",{id:"built-in-analyzers"},"Built-in Analyzers"),(0,l.kt)("p",null,"Some of the built-in analyzers are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Generic AST Analyzer"),(0,l.kt)("li",{parentName:"ul"},"ESLint Analyzer"),(0,l.kt)("li",{parentName:"ul"},"Ember Template Lint Analyzer"),(0,l.kt)("li",{parentName:"ul"},"StyleLint Analyzer"),(0,l.kt)("li",{parentName:"ul"},"TypeScript Analyzer"),(0,l.kt)("li",{parentName:"ul"},"JavaScript Analyzer"),(0,l.kt)("li",{parentName:"ul"},"HandleBars Analyzer"),(0,l.kt)("li",{parentName:"ul"},"Dependency Analyzer"),(0,l.kt)("li",{parentName:"ul"},"JSON Analyzer")),(0,l.kt)("p",null,"Analyzers are used in your Tasks to provide a consistent AST parsing and traversing mechanism."),(0,l.kt)("h2",{id:"using-analyzers"},"Using Analyzers"),(0,l.kt)("p",null,"Below is an example of using the JavaScript analyzer:"),(0,l.kt)(s.Z,{groupId:"js-flavor",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"ts",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="/tasks/demo-task.ts"',title:'"/tasks/demo-task.ts"'},"import { BaseTask, Task, TypeScriptAnalyzer } from '@checkup/core';\nimport { Result } from 'sarif';\n\nexport default class DemoTask extends BaseTask implements Task {\n  taskName = 'demo-task';\n  taskDisplayName = 'Deme Task';\n  description = 'A task for demonstration purposes';\n  category = 'best practices';\n\n  async run(): Promise<Result[]> {\n    let source = await this.readFile('some-file.ts');\n    let analyzer = new TypeScriptAnalyzer(source);\n\n    analyzer.analyze({\n      // Analyze the AST\n    });\n\n    // Gather and populate data into results\n\n    return this.results;\n  }\n}\n"))),(0,l.kt)(o.Z,{value:"js",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/tasks/demo-task.js"',title:'"/tasks/demo-task.js"'},"const { BaseTask, JavaScriptAnalyzer } = require('@checkup/core');\n\nmodule.exports = class DemoTask extends BaseTask {\n  taskName = 'demo-task';\n  taskDisplayName = 'Demo Task';\n  description = 'A task for demonstration purposes';\n  category = 'best practices';\n\n  async run() {\n    let source = await this.readFile('some-file.js');\n    let analyzer = new JavaScriptAnalyzer(source);\n\n    analyzer.analyze({\n      // Analyze the AST\n    });\n\n    // Gather and populate data into results\n\n    return this.results;\n  }\n};\n")))))}y.isMDXComponent=!0}}]);