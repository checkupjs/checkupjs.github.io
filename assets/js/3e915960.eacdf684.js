"use strict";(self.webpackChunkcheckup_website=self.webpackChunkcheckup_website||[]).push([[9451],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(i,".").concat(m)]||d[m]||p[m]||l;return n?a.createElement(h,u(u({ref:t},s),{},{components:n})):a.createElement(h,u({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,u=new Array(l);u[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,u[1]=o;for(var c=2;c<l;c++)u[c]=n[c];return a.createElement.apply(null,u)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(3117),r=n(7294),l=n(2389),u=n(9443);var o=function(){var e=(0,r.useContext)(u.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},i=n(9521),c=n(6010),s="tabItem_1uMI";function p(e){var t,n,a,l=e.lazy,u=e.block,p=e.defaultValue,d=e.values,m=e.groupId,h=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=d?d:f.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),g=(0,i.lx)(k,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===p?p:null!=(t=null!=p?p:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=f[0])?void 0:a.props.value;if(null!==v&&!k.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=o(),b=y.tabGroupChoices,w=y.setTabGroupChoices,N=(0,r.useState)(v),T=N[0],x=N[1],C=[],I=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var O=b[m];null!=O&&O!==T&&k.some((function(e){return e.value===O}))&&x(O)}var j=function(e){var t=e.currentTarget,n=C.indexOf(t),a=k[n].value;a!==T&&(I(t),x(a),null!=m&&w(m,a))},E=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=C.indexOf(e.currentTarget)+1;n=C[a]||C[0];break;case"ArrowLeft":var r=C.indexOf(e.currentTarget)-1;n=C[r]||C[C.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":u},h)},k.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,className:(0,c.Z)("tabs__item",s,{"tabs__item--active":T===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:E,onFocus:j,onClick:j},null!=n?n:t)}))),l?(0,r.cloneElement)(f.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function d(e){var t=(0,l.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},9443:function(e,t,n){var a=(0,n(7294).createContext)(void 0);t.Z=a},977:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return h}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),u=n(6396),o=n(8215),i=["components"],c={id:"quickstart",title:"Quickstart"},s=void 0,p={unversionedId:"introduction/quickstart",id:"introduction/quickstart",isDocsHomePage:!1,title:"Quickstart",description:"Checkup was created to optimize writing tasks that enable you to gather the information that's useful to you, and use that information to make decisions. Checkup allows you to:",source:"@site/docs/introduction/quickstart.mdx",sourceDirName:"introduction",slug:"/introduction/quickstart",permalink:"/docs/introduction/quickstart",editUrl:"https://github.com/checkupjs/checkup/edit/master/website/docs/introduction/quickstart.mdx",tags:[],version:"current",frontMatter:{id:"quickstart",title:"Quickstart"},sidebar:"guidesSidebar",previous:{title:"Why Checkup?",permalink:"/docs/introduction/why-checkup"},next:{title:"Command Line Interface",permalink:"/docs/introduction/cli"}},d=[{value:"Step 1: Install Checkup",id:"step-1-install-checkup",children:[],level:2},{value:"Step 2: Create a configuration file",id:"step-2-create-a-configuration-file",children:[{value:"Config file options",id:"config-file-options",children:[],level:3}],level:2},{value:"Step 3: Add plugins",id:"step-3-add-plugins",children:[],level:2},{value:"Step 4: Run the CLI",id:"step-4-run-the-cli",children:[],level:2}],m={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Checkup was created to optimize writing tasks that enable you to gather the information that's useful to you, and use that information to make decisions. Checkup allows you to:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Create and manage Plugins"),(0,l.kt)("li",{parentName:"ul"},"Write Tasks"),(0,l.kt)("li",{parentName:"ul"},"Add Task Actions to provide calls to actions"),(0,l.kt)("li",{parentName:"ul"},"Utilize the SARIF output in external tools")),(0,l.kt)("p",null,"Checkup can be used through the command line, or programmatically through the Node API."),(0,l.kt)("h2",{id:"step-1-install-checkup"},"Step 1: Install Checkup"),(0,l.kt)("p",null,"Checkup has it's own CLI for running tasks, installable via ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@checkup/cli"},"npm")," or ",(0,l.kt)("a",{parentName:"p",href:"https://classic.yarnpkg.com/lang/en/"},"yarn"),"."),(0,l.kt)(u.Z,{groupId:"package-manager-flavor",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @checkup/cli\n"))),(0,l.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @checkup/cli --dev\n")))),(0,l.kt)("p",null,"The Node API, which provides a way to run tasks programmatically, can also be accessed through the ",(0,l.kt)("inlineCode",{parentName:"p"},"@checkup/cli")," package."),(0,l.kt)("h2",{id:"step-2-create-a-configuration-file"},"Step 2: Create a configuration file"),(0,l.kt)("p",null,"Checkup uses a configuration file to define the plugins and tasks to run. You can create a configuration file by running the following command in the root of your project:"),(0,l.kt)(u.Z,{groupId:"package-manager-flavor",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx checkup generate config\n"))),(0,l.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn checkup generate config\n")))),(0,l.kt)("p",null,"This will generate a .checkuprc file in the current directory, with the following contents:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".checkuprc"',title:'".checkuprc"'},'{\n  "$schema": "https://raw.githubusercontent.com/checkupjs/checkup/master/packages/core/src/schemas/config-schema.json",\n  "excludePaths": [],\n  "plugins": [],\n  "tasks": {}\n}\n')),(0,l.kt)("h3",{id:"config-file-options"},"Config file options"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"excludePaths"),": A list of paths to exclude from analysis."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"plugins"),": A list of plugins to load."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tasks"),": A list of tasks to run.")),(0,l.kt)("h2",{id:"step-3-add-plugins"},"Step 3: Add plugins"),(0,l.kt)("p",null,"In order to run checkup, you must add plugins to your configuration file. Add plugins to your project by running the following command:"),(0,l.kt)(u.Z,{groupId:"package-manager-flavor",defaultValue:"npm",values:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D checkup-plugin-example\n"))),(0,l.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add checkup-plugin-example --dev\n")))),(0,l.kt)("p",null,"Then, edit the ",(0,l.kt)("inlineCode",{parentName:"p"},".checkuprc")," file that was created and add the plugin to your configuration file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".checkuprc"',title:'".checkuprc"'},'{\n  "$schema": "https://raw.githubusercontent.com/checkupjs/checkup/master/packages/core/src/schemas/config-schema.json",\n  "excludePaths": [],\n  "plugins": ["checkup-plugin-example"],\n  "tasks": {}\n}\n')),(0,l.kt)("h2",{id:"step-4-run-the-cli"},"Step 4: Run the CLI"),(0,l.kt)("p",null,"Finally, run the CLI in the root of your project to run your tasks:"),(0,l.kt)(u.Z,{groupId:"package-manager-flavor",defaultValue:"npx",values:[{label:"npx",value:"npx"},{label:"Yarn",value:"yarn"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"npx",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npx checkup run .\n"))),(0,l.kt)(o.Z,{value:"yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn checkup run .\n")))),(0,l.kt)("p",null,"Checkup will run the tasks in the configured plugins, and output the results to a SARIF file by default."),(0,l.kt)("p",null,"You can also analyze your results using a SARIF viewer. See ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/analyzing-results"},"analyzing results")," for more information."))}h.isMDXComponent=!0}}]);