"use strict";(self.webpackChunkcheckup_website=self.webpackChunkcheckup_website||[]).push([[3050],{3905:function(a,t,e){e.d(t,{Zo:function(){return p},kt:function(){return c}});var n=e(7294);function i(a,t,e){return t in a?Object.defineProperty(a,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[t]=e,a}function l(a,t){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(a,t).enumerable}))),e.push.apply(e,n)}return e}function r(a){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?l(Object(e),!0).forEach((function(t){i(a,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(t){Object.defineProperty(a,t,Object.getOwnPropertyDescriptor(e,t))}))}return a}function o(a,t){if(null==a)return{};var e,n,i=function(a,t){if(null==a)return{};var e,n,i={},l=Object.keys(a);for(n=0;n<l.length;n++)e=l[n],t.indexOf(e)>=0||(i[e]=a[e]);return i}(a,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(a);for(n=0;n<l.length;n++)e=l[n],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(i[e]=a[e])}return i}var s=n.createContext({}),d=function(a){var t=n.useContext(s),e=t;return a&&(e="function"==typeof a?a(t):r(r({},t),a)),e},p=function(a){var t=d(a.components);return n.createElement(s.Provider,{value:t},a.children)},k={inlineCode:"code",wrapper:function(a){var t=a.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(a,t){var e=a.components,i=a.mdxType,l=a.originalType,s=a.parentName,p=o(a,["components","mdxType","originalType","parentName"]),u=d(e),c=i,m=u["".concat(s,".").concat(c)]||u[c]||k[c]||l;return e?n.createElement(m,r(r({ref:t},p),{},{components:e})):n.createElement(m,r({ref:t},p))}));function c(a,t){var e=arguments,i=t&&t.mdxType;if("string"==typeof a||i){var l=e.length,r=new Array(l);r[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=a,o.mdxType="string"==typeof a?a:i,r[1]=o;for(var d=2;d<l;d++)r[d]=e[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,e)}u.displayName="MDXCreateElement"},6572:function(a,t,e){e.r(t),e.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var n=e(3117),i=e(102),l=(e(7294),e(3905)),r=["components"],o={id:"BaseValidationTask",title:"BaseValidationTask"},s=void 0,d={unversionedId:"api/@checkup/core/BaseValidationTask",id:"api/@checkup/core/BaseValidationTask",isDocsHomePage:!1,title:"BaseValidationTask",description:"BaseValidationTask",source:"@site/docs/api/@checkup/core/BaseValidationTask.md",sourceDirName:"api/@checkup/core",slug:"/api/@checkup/core/BaseValidationTask",permalink:"/docs/api/@checkup/core/BaseValidationTask",editUrl:"https://github.com/checkupjs/checkup/edit/master/website/docs/api/@checkup/core/BaseValidationTask.md",tags:[],version:"current",frontMatter:{id:"BaseValidationTask",title:"BaseValidationTask"},sidebar:"apiSidebar",previous:{title:"BaseTask",permalink:"/docs/api/@checkup/core/BaseTask"},next:{title:"CheckupError",permalink:"/docs/api/@checkup/core/CheckupError"}},p=[{value:"BaseValidationTask",id:"basevalidationtask",children:[{value:"new BaseValidationTask(pluginName, context)",id:"new-basevalidationtaskpluginname-context",children:[],level:3},{value:"baseValidationTask.addRuleComponentMetadata()",id:"basevalidationtaskaddrulecomponentmetadata",children:[],level:3},{value:"baseValidationTask.addValidationStep(messageText, validate)",id:"basevalidationtaskaddvalidationstepmessagetext-validate",children:[],level:3},{value:"baseValidationTask.validate() \u21d2",id:"basevalidationtaskvalidate-",children:[],level:3},{value:"baseValidationTask.addValidationResult(messageText, isValid, options)",id:"basevalidationtaskaddvalidationresultmessagetext-isvalid-options",children:[],level:3}],level:2}],k={toc:p};function u(a){var t=a.components,e=(0,i.Z)(a,r);return(0,l.kt)("wrapper",(0,n.Z)({},k,e,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("a",{name:"BaseValidationTask"}),(0,l.kt)("h2",{id:"basevalidationtask"},"BaseValidationTask"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": global class"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseValidationTask"},"BaseValidationTask"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#new_BaseValidationTask_new"},"new BaseValidationTask(pluginName, context)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseValidationTask+addRuleComponentMetadata"},".addRuleComponentMetadata()")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseValidationTask+addValidationStep"},".addValidationStep(messageText, validate)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseValidationTask+validate"},".validate()")," \u21d2"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#BaseValidationTask+addValidationResult"},".addValidationResult(messageText, isValid, options)"))))),(0,l.kt)("a",{name:"new_BaseValidationTask_new"}),(0,l.kt)("h3",{id:"new-basevalidationtaskpluginname-context"},"new BaseValidationTask(pluginName, context)"),(0,l.kt)("p",null,"Creates a new instance of a validation Task."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pluginName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the plugin this task is included in.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"context"),(0,l.kt)("td",{parentName:"tr",align:null},"The runtime task context passed to the Task.")))),(0,l.kt)("a",{name:"BaseValidationTask+addRuleComponentMetadata"}),(0,l.kt)("h3",{id:"basevalidationtaskaddrulecomponentmetadata"},"baseValidationTask.addRuleComponentMetadata()"),(0,l.kt)("p",null,"Adds componennt data to the rule metadata."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.kt)("a",{parentName:"p",href:"#BaseValidationTask"},(0,l.kt)("code",null,"BaseValidationTask")),"  "),(0,l.kt)("a",{name:"BaseValidationTask+addValidationStep"}),(0,l.kt)("h3",{id:"basevalidationtaskaddvalidationstepmessagetext-validate"},"baseValidationTask.addValidationStep(messageText, validate)"),(0,l.kt)("p",null,"Adds a validation step to be run during this class' validate method."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.kt)("a",{parentName:"p",href:"#BaseValidationTask"},(0,l.kt)("code",null,"BaseValidationTask"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageText"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"A non-empty string containing a plain text message")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"validate"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"ValidationResult")),(0,l.kt)("td",{parentName:"tr",align:null},"A function to run that returns a indicating whether the validation was successful.")))),(0,l.kt)("a",{name:"BaseValidationTask+validate"}),(0,l.kt)("h3",{id:"basevalidationtaskvalidate-"},"baseValidationTask.validate() \u21d2"),(0,l.kt)("p",null,"Validates each step added by addValidationStep."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.kt)("a",{parentName:"p",href:"#BaseValidationTask"},(0,l.kt)("code",null,"BaseValidationTask")),(0,l.kt)("br",{parentName:"p"}),"\n",(0,l.kt)("strong",{parentName:"p"},"Returns"),": A map of messages and ValidationResult objects  "),(0,l.kt)("a",{name:"BaseValidationTask+addValidationResult"}),(0,l.kt)("h3",{id:"basevalidationtaskaddvalidationresultmessagetext-isvalid-options"},"baseValidationTask.addValidationResult(messageText, isValid, options)"),(0,l.kt)("p",null,"Adds a validation-specific result object to the Checkup output. '"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,l.kt)("a",{parentName:"p",href:"#BaseValidationTask"},(0,l.kt)("code",null,"BaseValidationTask"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Param"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageText"),(0,l.kt)("td",{parentName:"tr",align:null},"A non-empty string containing a plain text message")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"isValid"),(0,l.kt)("td",{parentName:"tr",align:null},"A boolean indicating whether the validation step is valid.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options"),(0,l.kt)("td",{parentName:"tr",align:null},"Additional options to pass to the result")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options.location"),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies a location where the result occurred")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options.properties"),(0,l.kt)("td",{parentName:"tr",align:null},"A property bag named properties, which stores additional values on the result")))))}u.isMDXComponent=!0}}]);